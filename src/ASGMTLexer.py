# Generated from ASGMT.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,137,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,
        6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,
        9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,
        12,1,12,1,12,1,13,1,13,1,14,1,14,1,14,5,14,94,8,14,10,14,12,14,97,
        9,14,1,15,3,15,100,8,15,1,15,4,15,103,8,15,11,15,12,15,104,1,15,
        1,15,5,15,109,8,15,10,15,12,15,112,9,15,3,15,114,8,15,1,16,1,16,
        1,16,1,16,5,16,120,8,16,10,16,12,16,123,9,16,1,16,1,16,1,16,1,16,
        1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,19,1,19,1,121,0,20,1,1,3,2,
        5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,
        15,31,16,33,17,35,18,37,0,39,19,1,0,3,3,0,9,10,13,13,32,32,2,0,65,
        90,97,122,1,0,48,57,142,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
        1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
        1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,39,
        1,0,0,0,1,41,1,0,0,0,3,43,1,0,0,0,5,45,1,0,0,0,7,47,1,0,0,0,9,49,
        1,0,0,0,11,51,1,0,0,0,13,55,1,0,0,0,15,57,1,0,0,0,17,59,1,0,0,0,
        19,68,1,0,0,0,21,73,1,0,0,0,23,78,1,0,0,0,25,83,1,0,0,0,27,88,1,
        0,0,0,29,90,1,0,0,0,31,99,1,0,0,0,33,115,1,0,0,0,35,129,1,0,0,0,
        37,133,1,0,0,0,39,135,1,0,0,0,41,42,5,61,0,0,42,2,1,0,0,0,43,44,
        5,43,0,0,44,4,1,0,0,0,45,46,5,42,0,0,46,6,1,0,0,0,47,48,5,91,0,0,
        48,8,1,0,0,0,49,50,5,93,0,0,50,10,1,0,0,0,51,52,5,103,0,0,52,53,
        5,109,0,0,53,54,5,40,0,0,54,12,1,0,0,0,55,56,5,44,0,0,56,14,1,0,
        0,0,57,58,5,41,0,0,58,16,1,0,0,0,59,60,5,112,0,0,60,61,5,111,0,0,
        61,62,5,105,0,0,62,63,5,115,0,0,63,64,5,115,0,0,64,65,5,111,0,0,
        65,66,5,110,0,0,66,67,5,40,0,0,67,18,1,0,0,0,68,69,5,100,0,0,69,
        70,5,105,0,0,70,71,5,115,0,0,71,72,5,99,0,0,72,20,1,0,0,0,73,74,
        5,110,0,0,74,75,5,98,0,0,75,76,5,105,0,0,76,77,5,110,0,0,77,22,1,
        0,0,0,78,79,5,109,0,0,79,80,5,111,0,0,80,81,5,109,0,0,81,82,5,49,
        0,0,82,24,1,0,0,0,83,84,5,109,0,0,84,85,5,111,0,0,85,86,5,109,0,
        0,86,87,5,50,0,0,87,26,1,0,0,0,88,89,5,45,0,0,89,28,1,0,0,0,90,95,
        3,37,18,0,91,94,3,37,18,0,92,94,3,39,19,0,93,91,1,0,0,0,93,92,1,
        0,0,0,94,97,1,0,0,0,95,93,1,0,0,0,95,96,1,0,0,0,96,30,1,0,0,0,97,
        95,1,0,0,0,98,100,5,45,0,0,99,98,1,0,0,0,99,100,1,0,0,0,100,102,
        1,0,0,0,101,103,3,39,19,0,102,101,1,0,0,0,103,104,1,0,0,0,104,102,
        1,0,0,0,104,105,1,0,0,0,105,113,1,0,0,0,106,110,5,46,0,0,107,109,
        3,39,19,0,108,107,1,0,0,0,109,112,1,0,0,0,110,108,1,0,0,0,110,111,
        1,0,0,0,111,114,1,0,0,0,112,110,1,0,0,0,113,106,1,0,0,0,113,114,
        1,0,0,0,114,32,1,0,0,0,115,116,5,47,0,0,116,117,5,42,0,0,117,121,
        1,0,0,0,118,120,9,0,0,0,119,118,1,0,0,0,120,123,1,0,0,0,121,122,
        1,0,0,0,121,119,1,0,0,0,122,124,1,0,0,0,123,121,1,0,0,0,124,125,
        5,42,0,0,125,126,5,47,0,0,126,127,1,0,0,0,127,128,6,16,0,0,128,34,
        1,0,0,0,129,130,7,0,0,0,130,131,1,0,0,0,131,132,6,17,0,0,132,36,
        1,0,0,0,133,134,7,1,0,0,134,38,1,0,0,0,135,136,7,2,0,0,136,40,1,
        0,0,0,8,0,93,95,99,104,110,113,121,1,6,0,0
    ]

class ASGMTLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    IDV = 15
    NUM = 16
    COMM = 17
    WS = 18
    DIGIT = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'+'", "'*'", "'['", "']'", "'gm('", "','", "')'", "'poisson('", 
            "'disc'", "'nbin'", "'mom1'", "'mom2'", "'-'" ]

    symbolicNames = [ "<INVALID>",
            "IDV", "NUM", "COMM", "WS", "DIGIT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "IDV", "NUM", "COMM", "WS", "ALPHA", "DIGIT" ]

    grammarFileName = "ASGMT.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


